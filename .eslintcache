[{"C:\\Users\\Robby\\Documents\\Coding\\stardew-tracker\\src\\index.js":"1","C:\\Users\\Robby\\Documents\\Coding\\stardew-tracker\\src\\App.js":"2","C:\\Users\\Robby\\Documents\\Coding\\stardew-tracker\\src\\components\\communityCenter.js":"3","C:\\Users\\Robby\\Documents\\Coding\\stardew-tracker\\src\\components\\bundle.js":"4","C:\\Users\\Robby\\Documents\\Coding\\stardew-tracker\\src\\components\\roomReward.js":"5"},{"size":195,"mtime":1607216670158,"results":"6","hashOfConfig":"7"},{"size":267,"mtime":1607834682611,"results":"8","hashOfConfig":"7"},{"size":4977,"mtime":1607907059535,"results":"9","hashOfConfig":"7"},{"size":3294,"mtime":1607908220777,"results":"10","hashOfConfig":"7"},{"size":276,"mtime":1607905867270,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"tiy5zu",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},"C:\\Users\\Robby\\Documents\\Coding\\stardew-tracker\\src\\index.js",[],["27","28"],"C:\\Users\\Robby\\Documents\\Coding\\stardew-tracker\\src\\App.js",[],"C:\\Users\\Robby\\Documents\\Coding\\stardew-tracker\\src\\components\\communityCenter.js",["29"],"import React from \"react\";\r\nimport { Tabs, Tab, Button } from \"react-bootstrap\";\r\nimport { Bundle } from \"./bundle\";\r\nimport { Reward } from \"./roomReward\";\r\nconst { ipcRenderer } = window.require('electron');\r\n\r\nexport const CommunityCenter = () => {\r\n\r\n    let itemData = require('../itemData.json');\r\n\r\n    let imageName = require('../images/game_logo.png');\r\n\r\n    const handleClear = () => {\r\n        ipcRenderer.send('clear');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Tabs id=\"RoomTabs\" defaultActiveKey=\"crafts\" id=\"uncontrolled-tab-example\" transition={false} style={{borderBottom: 0}}>\r\n                <Tab eventKey=\"crafts\" title=\"Crafts Room\" className=\"Room\">\r\n                    <Reward link={itemData.craftsRewardLink} reward={itemData[\"craftsReward\"]} />\r\n                    <Bundle name={\"Spring Foraging Bundle\"} bundle={\"crafts1\"}></Bundle>\r\n                    <Bundle name={\"Summer Foraging Bundle\"} bundle={\"crafts2\"}></Bundle>\r\n                    <Bundle name={\"Fall Foraging Bundle\"} bundle={\"crafts3\"}></Bundle>\r\n                    <Bundle name={\"Winter Foraging Bundle\"} bundle={\"crafts4\"}></Bundle>\r\n                    <Bundle name={\"Construction Bundle\"} bundle={\"crafts5\"}></Bundle>\r\n                    <Bundle name={\"Exotic Foraging Bundle\"} bundle={\"crafts6\"}></Bundle>\r\n                </Tab>\r\n                <Tab eventKey=\"pantry\" title=\"Pantry\" className=\"Room\">\r\n                    <Reward link={itemData.pantryRewardLink} reward={itemData[\"pantryReward\"]} />\r\n                    <Bundle name={\"Spring Crops Bundle\"} bundle={\"pantry1\"}></Bundle>\r\n                    <Bundle name={\"Summer Crops Bundle\"} bundle={\"pantry2\"}></Bundle>\r\n                    <Bundle name={\"Fall Crops Bundle\"} bundle={\"pantry3\"}></Bundle>\r\n                    <Bundle name={\"Quality Crops Bundle\"} bundle={\"pantry4\"}></Bundle>\r\n                    <Bundle name={\"Animal Bundle\"} bundle={\"pantry5\"}></Bundle>\r\n                    <Bundle name={\"Artisan Bundle\"} bundle={\"pantry6\"}></Bundle>\r\n                </Tab>\r\n                <Tab eventKey=\"fish\" title=\"Fish Tank\" className=\"Room\">\r\n                    <Reward link={itemData.fishRewardLink} reward={itemData[\"fishReward\"]} />\r\n                    <Bundle name={\"River Fish Bundle\"} bundle={\"fish1\"}></Bundle>\r\n                    <Bundle name={\"Lake Fish Bundle\"} bundle={\"fish2\"}></Bundle>\r\n                    <Bundle name={\"Ocean Fish Bundle\"} bundle={\"fish3\"} ></Bundle>\r\n                    <Bundle name={\"Night Fishing Bundle\"} bundle={\"fish4\"}></Bundle>\r\n                    <Bundle name={\"Crab Pot Bundle\"} bundle={\"fish5\"}></Bundle>\r\n                    <Bundle name={\"Specialty Fish Bundle\"} bundle={\"fish6\"}></Bundle>\r\n                </Tab>\r\n                <Tab eventKey=\"boiler\" title=\"Boiler Room\" className=\"Room\">\r\n                    <Reward link={itemData.boilerRewardLink} reward={itemData[\"boilerReward\"]} />\r\n                    <Bundle name={\"Blacksmith's Bundle\"} bundle={\"boiler1\"}></Bundle>\r\n                    <Bundle name={\"Geologist's Bundle\"} bundle={\"boiler2\"}></Bundle>\r\n                    <Bundle name={\"Adventurer's Bundle\"} bundle={\"boiler3\"}></Bundle>\r\n                </Tab>\r\n                <Tab eventKey=\"bulletin\" title=\"Bulletin Board\" className=\"Room\">\r\n                    <Reward link={itemData.bulletinRewardLink} reward={itemData[\"bulletinReward\"]} />\r\n                    <Bundle name={\"Chef's Bundle\"} bundle={\"board1\"}></Bundle>\r\n                    <Bundle name={\"Dye Bundle\"} bundle={\"board2\"}></Bundle>\r\n                    <Bundle name={\"Field Research Bundle\"} bundle={\"board3\"}></Bundle>\r\n                    <Bundle name={\"Fodder Bundle\"} bundle={\"board4\"}></Bundle>\r\n                    <Bundle name={\"Enchanter's Bundle\"} bundle={\"board5\"}></Bundle>\r\n                </Tab>\r\n                <Tab eventKey=\"vault\" title=\"Vault\" className=\"Room\">\r\n                    <Reward link={itemData.vaultRewardLink} reward={itemData[\"vaultReward\"]} />\r\n                    <Bundle name={\"2,500 Bundle\"} bundle={\"vault1\"}></Bundle>\r\n                    <Bundle name={\"5,000 Bundle\"} bundle={\"vault2\"}></Bundle>\r\n                    <Bundle name={\"10,000 Bundle\"} bundle={\"vault3\"}></Bundle>\r\n                    <Bundle name={\"25,000 Bundle\"} bundle={\"vault4\"}></Bundle>\r\n                </Tab>\r\n                <Tab eventKey=\"joja\" title=\"Abandonded JojaMart\" className=\"Room\">\r\n                    <Reward link={itemData.jojaRewardLink} reward={itemData[\"jojaReward\"]} />\r\n                    <Bundle name={\"The Missing Bundle\"} bundle={\"joja\"}></Bundle>\r\n                </Tab>\r\n            </Tabs>\r\n            <div className=\"Tail\" style={{paddingTop: '15px'}}>\r\n                <img id=\"Logo\" src={imageName.default} alt=\"\"/>\r\n            </div>\r\n            <div className=\"Tail\">\r\n                <Button id=\"ResetButton\" onClick={handleClear} variant=\"success\">Reset All</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};","C:\\Users\\Robby\\Documents\\Coding\\stardew-tracker\\src\\components\\bundle.js",["30","31"],"import React, {useEffect, useState} from \"react\";\r\nimport { Table, Container, Form } from \"react-bootstrap\";\r\nimport './components.css';\r\nconst { ipcRenderer } = window.require('electron');\r\n\r\n\r\nexport const Bundle = (props) => {\r\n\r\n    let itemData = require('../itemData.json');\r\n\r\n    let imageName = require(`../images/${itemData[props.bundle].img}.png`);\r\n\r\n    const [itemState, setItemState] = useState({items: []});\r\n\r\n    const handleClick = (event) => {\r\n        let itemIdx = event.target.name;\r\n        ipcRenderer.send('data', props.bundle, itemIdx);\r\n        let tmp = itemState.items;\r\n        tmp[itemIdx] = !itemState.items[itemIdx];\r\n        setItemState({\r\n            items: tmp\r\n        });\r\n    }\r\n\r\n    const countItems = () => {\r\n        let count = 0;\r\n        for(let i = 0; i < itemState.items.length; i++) {\r\n            if(itemState.items[i]) {\r\n                count++;\r\n            }\r\n        }\r\n        if(count > itemData[props.bundle].count) {\r\n            return itemData[props.bundle].count;\r\n        }\r\n        return count;\r\n    }\r\n\r\n    const getDataAsync = async () => {\r\n        let tmp = [];\r\n        for(let i = 0; i < itemData[props.bundle].items.length; i++) {\r\n            let result = await ipcRenderer.invoke('get', props.bundle, i);\r\n            tmp[i] = result;\r\n        }\r\n        setItemState({\r\n            items: tmp\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDataAsync();\r\n    }, [])\r\n    \r\n    return (\r\n        <Container id=\"BundleContainer\">\r\n            <div>\r\n                <div id=\"BundleHeader\">\r\n                    <img id=\"BundleHeaderImg\" src={imageName.default} alt=\"\"/>\r\n                    <p id=\"BundleHeaderText\">&nbsp;{props.name} ({countItems()}/{itemData[props.bundle].count})</p>\r\n                </div>\r\n                <Table hover bordered striped size=\"sm\" id=\"Table\" variant=\"dark\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"CheckRow\">&#10003;</th>\r\n                            <th className=\"ItemRow\">Item</th>\r\n                            <th className=\"SourceRow\">Source</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {itemData[props.bundle].items.map((item, i) => {\r\n                        return (\r\n                            <tr key={i}>\r\n                                <th className=\"CheckRow\">\r\n                                    <Form.Check name={i} type=\"checkbox\" onChange={handleClick} checked={itemState.items[i] ? itemState.items[i] : false}/>\r\n                                </th>\r\n                                <th className=\"ItemRow\"><a href={item.link} target=\"_blank\">{item.name}</a></th>\r\n                                <th className=\"SourceRow\">{item.source}</th>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                        <tr>\r\n                            <th className=\"CheckRow\"></th>\r\n                            <th className=\"ItemRow\">Reward</th>\r\n                            <th className=\"SourceRow\">{itemData[props.bundle].reward}</th>\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </Container>\r\n    );\r\n};","C:\\Users\\Robby\\Documents\\Coding\\stardew-tracker\\src\\components\\roomReward.js",["32"],"import React from \"react\";\r\nimport './components.css';\r\n\r\nexport const Reward = (props) => {\r\n    return (\r\n        <div id=\"RewardContainer\">\r\n            <span id=\"RewardText\">Reward: <a href={props.link} target=\"_blank\">{props.reward}</a></span>\r\n        </div>\r\n    );\r\n};",["33","34"],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":19,"column":59,"nodeType":"41","endLine":19,"endColumn":88},{"ruleId":"42","severity":1,"message":"43","line":51,"column":8,"nodeType":"44","endLine":51,"endColumn":10,"suggestions":"45"},{"ruleId":"46","severity":1,"message":"47","line":75,"column":77,"nodeType":"41","endLine":75,"endColumn":92},{"ruleId":"46","severity":1,"message":"47","line":7,"column":64,"nodeType":"41","endLine":7,"endColumn":79},{"ruleId":"35","replacedBy":"48"},{"ruleId":"37","replacedBy":"49"},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getDataAsync'. Either include it or remove the dependency array.","ArrayExpression",["52"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener",["50"],["51"],"no-global-assign","no-unsafe-negation",{"desc":"53","fix":"54"},"Update the dependencies array to be: [getDataAsync]",{"range":"55","text":"56"},[1449,1451],"[getDataAsync]"]