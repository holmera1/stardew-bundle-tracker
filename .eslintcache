[{"C:\\Users\\Robby\\Documents\\Coding\\stardew-tracker\\src\\index.js":"1","C:\\Users\\Robby\\Documents\\Coding\\stardew-tracker\\src\\App.js":"2","C:\\Users\\Robby\\Documents\\Coding\\stardew-tracker\\src\\components\\communityCenter.js":"3","C:\\Users\\Robby\\Documents\\Coding\\stardew-tracker\\src\\components\\bundle.js":"4"},{"size":195,"mtime":1607216670158,"results":"5","hashOfConfig":"6"},{"size":483,"mtime":1607479200962,"results":"7","hashOfConfig":"6"},{"size":5680,"mtime":1607531994227,"results":"8","hashOfConfig":"6"},{"size":2927,"mtime":1607531802551,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"tiy5zu",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"C:\\Users\\Robby\\Documents\\Coding\\stardew-tracker\\src\\index.js",[],["21","22"],"C:\\Users\\Robby\\Documents\\Coding\\stardew-tracker\\src\\App.js",[],"C:\\Users\\Robby\\Documents\\Coding\\stardew-tracker\\src\\components\\communityCenter.js",["23","24","25","26","27","28","29","30"],"import React, { useEffect } from \"react\";\r\nimport { Tabs, Tab, Button } from \"react-bootstrap\";\r\nimport { Bundle } from \"./bundle\";\r\nimport useForceUpdate from 'use-force-update';\r\nconst { ipcRenderer } = window.require('electron');\r\n\r\nexport const CommunityCenter = () => {\r\n\r\n    let itemData = require('../itemData.json');\r\n\r\n    let imageName = require('../images/game_logo.png');\r\n\r\n    const forceUpdate = useForceUpdate();\r\n\r\n    const handleClear = React.useCallback(() => {\r\n        ipcRenderer.send('clear');\r\n        forceUpdate();\r\n    }, [forceUpdate]);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => forceUpdate(), 100);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Tabs defaultActiveKey=\"crafts\" id=\"uncontrolled-tab-example\" transition={false}>\r\n                <Tab eventKey=\"crafts\" title=\"Crafts Room\">\r\n                    <h4 style={{marginTop: '20px', marginLeft: '20px'}}>Reward: <a href={itemData.craftsRewardLink} target=\"_blank\">{itemData[\"craftsReward\"]}</a></h4>\r\n                    <Bundle name={\"Spring Foraging Bundle\"} bundle={\"crafts1\"}></Bundle>\r\n                    <Bundle name={\"Summer Foraging Bundle\"} bundle={\"crafts2\"}></Bundle>\r\n                    <Bundle name={\"Fall Foraging Bundle\"} bundle={\"crafts3\"}></Bundle>\r\n                    <Bundle name={\"Winter Foraging Bundle\"} bundle={\"crafts4\"}></Bundle>\r\n                    <Bundle name={\"Construction Bundle\"} bundle={\"crafts5\"}></Bundle>\r\n                    <Bundle name={\"Exotic Foraging Bundle\"} bundle={\"crafts6\"}></Bundle>\r\n                </Tab>\r\n                <Tab eventKey=\"pantry\" title=\"Pantry\">\r\n                    <h4 style={{marginTop: '20px', marginLeft: '20px'}}>Reward: <a href={itemData.pantryRewardLink} target=\"_blank\">{itemData[\"pantryReward\"]}</a></h4>\r\n                    <Bundle name={\"Spring Crops Bundle\"} bundle={\"pantry1\"}></Bundle>\r\n                    <Bundle name={\"Summer Crops Bundle\"} bundle={\"pantry2\"}></Bundle>\r\n                    <Bundle name={\"Fall Crops Bundle\"} bundle={\"pantry3\"}></Bundle>\r\n                    <Bundle name={\"Quality Crops Bundle\"} bundle={\"pantry4\"}></Bundle>\r\n                    <Bundle name={\"Animal Bundle\"} bundle={\"pantry5\"}></Bundle>\r\n                    <Bundle name={\"Artisan Bundle\"} bundle={\"pantry6\"}></Bundle>\r\n                </Tab>\r\n                <Tab eventKey=\"fish\" title=\"Fish Tank\">\r\n                    <h4 style={{marginTop: '20px', marginLeft: '20px'}}>Reward: <a href={itemData.fishRewardLink} target=\"_blank\">{itemData[\"fishReward\"]}</a></h4>\r\n                    <Bundle name={\"River Fish Bundle\"} bundle={\"fish1\"}></Bundle>\r\n                    <Bundle name={\"Lake Fish Bundle\"} bundle={\"fish2\"}></Bundle>\r\n                    <Bundle name={\"Ocean Fish Bundle\"} bundle={\"fish3\"} ></Bundle>\r\n                    <Bundle name={\"Night Fishing Bundle\"} bundle={\"fish4\"}></Bundle>\r\n                    <Bundle name={\"Crab Pot Bundle\"} bundle={\"fish5\"}></Bundle>\r\n                    <Bundle name={\"Specialty Fish Bundle\"} bundle={\"fish6\"}></Bundle>\r\n                </Tab>\r\n                <Tab eventKey=\"boiler\" title=\"Boiler Room\">\r\n                    <h4 style={{marginTop: '20px', marginLeft: '20px'}}>Reward: <a href={itemData.boilerRewardLink} target=\"_blank\">{itemData[\"boilerReward\"]}</a></h4>\r\n                    <Bundle name={\"Blacksmith's Bundle\"} bundle={\"boiler1\"}></Bundle>\r\n                    <Bundle name={\"Geologist's Bundle\"} bundle={\"boiler2\"}></Bundle>\r\n                    <Bundle name={\"Adventurer's Bundle\"} bundle={\"boiler3\"}></Bundle>\r\n                </Tab>\r\n                <Tab eventKey=\"bulletin\" title=\"Bulletin Board\">\r\n                    <h4 style={{marginTop: '20px', marginLeft: '20px'}}>Reward: <a href={itemData.bulletinRewardLink} target=\"_blank\">{itemData[\"bulletinReward\"]}</a></h4>\r\n                    <Bundle name={\"Chef's Bundle\"} bundle={\"board1\"}></Bundle>\r\n                    <Bundle name={\"Dye Bundle\"} bundle={\"board2\"}></Bundle>\r\n                    <Bundle name={\"Field Research Bundle\"} bundle={\"board3\"}></Bundle>\r\n                    <Bundle name={\"Fodder Bundle\"} bundle={\"board4\"}></Bundle>\r\n                    <Bundle name={\"Enchanter's Bundle\"} bundle={\"board5\"}></Bundle>\r\n                </Tab>\r\n                <Tab eventKey=\"vault\" title=\"Vault\">\r\n                    <h4 style={{marginTop: '20px', marginLeft: '20px'}}>Reward: <a href={itemData.vaultRewardLink} target=\"_blank\">{itemData[\"vaultReward\"]}</a></h4>\r\n                    <Bundle name={\"2,500 Bundle\"} bundle={\"vault1\"}></Bundle>\r\n                    <Bundle name={\"5,000 Bundle\"} bundle={\"vault2\"}></Bundle>\r\n                    <Bundle name={\"10,000 Bundle\"} bundle={\"vault3\"}></Bundle>\r\n                    <Bundle name={\"25,000 Bundle\"} bundle={\"vault4\"}></Bundle>\r\n                </Tab>\r\n                <Tab eventKey=\"joja\" title=\"Abandonded JojaMart\">\r\n                    <h4 style={{marginTop: '20px', marginLeft: '20px'}}>Reward: <a href={itemData.jojaRewardLink} target=\"_blank\">{itemData[\"jojaReward\"]}</a></h4>\r\n                    <Bundle name={\"The Missing Bundle\"} bundle={\"joja\"}></Bundle>\r\n                </Tab>\r\n            </Tabs>\r\n            <div style={{display: 'flex', justifyContent: 'center', paddingBottom: '40px'}}>\r\n                <img src={imageName.default} alt=\"\" style={{height: '100px', width: 'auto'}}/>\r\n            </div>\r\n            <div style={{display: 'flex', justifyContent: 'center', paddingBottom: '40px'}}>\r\n                <Button onClick={handleClear} variant=\"success\" style={{display: 'inline-block', float: 'left', margin: '5px'}}>Reset</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};","C:\\Users\\Robby\\Documents\\Coding\\stardew-tracker\\src\\components\\bundle.js",["31"],"import React, {useState} from \"react\";\r\nimport { Table, Col, Container, Form } from \"react-bootstrap\";\r\nconst { ipcRenderer } = window.require('electron');\r\n\r\nexport const Bundle = (props) => {\r\n\r\n    let itemData = require('../itemData.json');\r\n\r\n    let imageName = require(`../images/${itemData[props.bundle].img}.png`);\r\n\r\n    const [itemState, setItemState] = useState([]);\r\n\r\n    const handleClick = (bundle, itemIdx) => {\r\n        ipcRenderer.send('data', bundle, itemIdx);\r\n        let tmp = itemState;\r\n        tmp[itemIdx] = !itemState[itemIdx];\r\n        setItemState(tmp);\r\n    }\r\n\r\n    const handleItemState = async (bundle, itemIdx) => {\r\n        let val = await ipcRenderer.invoke('get', bundle, itemIdx);\r\n        let tmp = itemState;\r\n        tmp[itemIdx] = val;\r\n        setItemState(tmp);\r\n    }\r\n\r\n    return (\r\n        <Container style={{ padding: \"1.2%\" }}>\r\n            <Col sm={{ size: 10 }}>\r\n                <div style={{marginBottom: '0px'}}>\r\n                    <img src={imageName.default} alt={''} style={{display: 'inline-block', verticalAlign: 'bottom', width: '40px', height: 'auto'}}/>\r\n                    <p style={{display: 'inline-block', fontWeight: 'bold', fontSize: '18px', margin: '0'}}>&nbsp;{props.name} (Need {itemData[props.bundle].count})</p>\r\n                </div>\r\n                <Table bordered hover striped size=\"sm\" variant=\"dark\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th style={{width: '5%', textAlign: 'center'}}>&#10003;</th>\r\n                            <th style={{width: '15%'}}>Item</th>\r\n                            <th>Source</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        itemData[props.bundle].items.map((item, i) => {\r\n                            handleItemState(props.bundle, i);\r\n                            return (\r\n                                <tr key={i}>\r\n                                    <th style={{width: '5%', textAlign: 'center'}}>\r\n                                        <Form.Check type=\"checkbox\" onClick={() => {handleClick(props.bundle, i)}} defaultChecked={itemState[i]}/>\r\n                                    </th>\r\n                                    <th style={{width: '15%'}}><a href={item.link} target=\"_blank\">{item.name}</a></th>\r\n                                    <th>{item.source}</th>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                        <tr>\r\n                            <th style={{width: '5%'}}></th>\r\n                            <th style={{width: '15%'}}>Reward</th>\r\n                            <th>{itemData[props.bundle].reward}</th>\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n            </Col>\r\n        </Container>\r\n    );\r\n};",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":22,"column":8,"nodeType":"38","endLine":22,"endColumn":10,"suggestions":"39"},{"ruleId":"40","severity":1,"message":"41","line":28,"column":117,"nodeType":"42","endLine":28,"endColumn":132},{"ruleId":"40","severity":1,"message":"41","line":37,"column":117,"nodeType":"42","endLine":37,"endColumn":132},{"ruleId":"40","severity":1,"message":"41","line":46,"column":115,"nodeType":"42","endLine":46,"endColumn":130},{"ruleId":"40","severity":1,"message":"41","line":55,"column":117,"nodeType":"42","endLine":55,"endColumn":132},{"ruleId":"40","severity":1,"message":"41","line":61,"column":119,"nodeType":"42","endLine":61,"endColumn":134},{"ruleId":"40","severity":1,"message":"41","line":69,"column":116,"nodeType":"42","endLine":69,"endColumn":131},{"ruleId":"40","severity":1,"message":"41","line":76,"column":115,"nodeType":"42","endLine":76,"endColumn":130},{"ruleId":"40","severity":1,"message":"41","line":51,"column":84,"nodeType":"42","endLine":51,"endColumn":99},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'forceUpdate'. Either include it or remove the dependency array.","ArrayExpression",["45"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},"Update the dependencies array to be: [forceUpdate]",{"range":"48","text":"49"},[647,649],"[forceUpdate]"]